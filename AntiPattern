public class BookManager {

    
    private List<Book> books;
    private BookDisplay display; // removed UI varuable 
    
    public BookManager() {
        books = new ArrayList<>();
        ui = new UI();
    }
    
    public void addBook(Book book) {
        books.add(book);
    }
    
    public void removeBook(Book book) {
        books.remove(book);
    }
    
    public void displayBooks() {
        // this method has been refactored to follow the single responsibility principle
        
        for (Book book : books) {
            ui.printBookDetails(book);
        }
        ui.waitForInput();
    }
    
    public void searchBook(String title) {
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                ui.printBookDetails(book);
            }
        }
    }
    
    // / This new class is responsible for displaying books, following the separation of concerns principle
    
   public class BookDisplay {
    
    public void showBooks(List<Book> books) {
        clearScreen();
        printHeader("List of Books");
        for (Book book : books) {
            printBookDetails(book);
        }
        waitForInput();
    }
    
    private void clearScreen() {
        // code to clear the screen
    }
        
    private void printHeader(String text) {
        // code to print a header
    }
        
    private void printBookDetails(Book book) {
        // code to print book details
    }
        
    private void waitForInput() {
        // code to wait for user input
    }
}
